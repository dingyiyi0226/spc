#!/bin/bash
# Summary: Download file/folders from remote machine
# Usage: spc download [-r <remote-name>] [-d <download-directory>] [-c <config-string>] <file1> <file2> <...>
# Example: spc download -r remote1 -d /home -c "-P=8787 -p" file1
#

set -e

if [ -n "$SPC_DEBUG" ]; then
  set -x
fi

# Provide spc completions
if [ "$1" = "--complete" ]; then
  if [[ -z "$2" ]]; then
    echo -r
    echo -d
    echo -c
    exit
  fi
  if [ "$2" = "-r" ]; then
    exec spc-remotes --raw
  fi
  exit
fi

SCP_OPS=("-3" "-4" "-6" "-B" "-C" "-p" "-q" "-r" "-T" "-v" "-c" "-F" "-i" "-J" "-l" "-o" "-P" "-S")
DEFAULT_DOWNLOAD_DIR="${HOME}/"

configs=()

get_config() {
  local config="$1"
  local file="$2"

  awk -F "=" -v config="${config}" '$0~config {print $2}' "${file}"
}

apply_config() {
  ## create or replace config

  local option="$1"
  local value="$2"

  if [[ ! "${SCP_OPS[*]}" =~ ${option} ]]; then
    echo "Invalid option: ${option}"
    exit
  fi

  # replace config if exists
  for i in "${!configs[@]}"; do
    if [[ "${configs[i]%% *}" == "${option}" ]]; then
      if [[ -n "${value}" ]]; then
        configs[i]="${option} ${value}"
      else
        configs[i]="${option}"
      fi
      return 0
    fi
  done

  # append config
  if [[ -n "${value}" ]]; then
    configs+=("${option} ${value}")
  else
    configs+=("${option}")
  fi
}

parse_config() {
  ## parse config and store in three variables: address, downloaddir, configs

  if [ ! -f "${SPC_REMOTES_DIR}/$1" ]; then
    echo "$1 not found"
  else
    address="$(get_config "address" "${SPC_REMOTES_DIR}/$1")"
    if [ -z "${address}" ]; then
      echo "No address"
      exit
    fi

    downloaddir="$(get_config "downloaddir" "${SPC_REMOTES_DIR}/$1")"
    if [[ -z "${downloaddir}" ]]; then
      downloaddir="${DEFAULT_DOWNLOAD_DIR}"
    fi

    for ops in "${SCP_OPS[@]}"; do
      if grep -q -E "^${ops}(=|$)" "${SPC_REMOTES_DIR}/$1"; then
        value="$(get_config "${ops}" "${SPC_REMOTES_DIR}/$1")"

        if [[ -n "${value}" ]]; then
          configs+=("${ops} ${value}")
        else
          configs+=("${ops}")
        fi
      fi
    done
  fi
}

if [[ "$1" =~ ^(-r|--remote)$ ]]; then
  if [ -z "$2" ]; then
    echo "Missing <remote>"
    exit
  elif [ ! -f "${SPC_REMOTES_DIR}/$2" ]; then
    echo "$2 not exists"
    exit
  fi
  remote="$2"
  shift 2

else
  if [ ! -f "${SPC_REMOTE}" ]; then
    echo "Default remote not set"
    exit
  fi

  remote="$(cat "${SPC_REMOTE}")"
fi

if [ $# == 0 ]; then
  echo "Missing files"
  exit
fi

parse_config "${remote}"

if [[ "$1" =~ ^(-d|--directory)$ ]]; then
  if [ -z "$2" ]; then
    echo "Missing <upload-directory>"
    exit
  fi

  # overwrite the download directory
  # the directory containing a leading "/" is absolute path
  if [[ "$2" == /* ]]; then
    downloaddir="$2"
  else
    downloaddir="${downloaddir}$2"
  fi
  shift 2
fi

if [[ "$1" =~ ^(-c|--config)$ ]]; then
  if [ -z "$2" ]; then
    echo "Missing <config-string>"
    exit
  fi

  read -r -a custom_configs <<< "$2"

  for config in "${custom_configs[@]}"; do
    if [[ "${config}" == *=* ]]; then
      apply_config "${config%%=*}" "${config##*=}"
    else
      apply_config "${config}"
    fi
  done
  shift 2
fi


if [ $# -gt 1 ]; then
  IFS=","
  scp -r "${configs[@]}" "${address}:{$*}" "${downloaddir}"
  IFS=" "
else
  scp -r "${configs[@]}" "${address}:$*" "${downloaddir}"
fi
